# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-10 15:59
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

import os.path
import requests
from django.conf import settings


def upload_reply_images_to_reticulum(apps, schema_editor):
    Reply = apps.get_model("main", "Reply")
    for reply in Reply.objects.all():
        if reply.rhash or not reply.image:
            continue
        fullpath = os.path.join(settings.MEDIA_ROOT, str(reply.image))
        extension = os.path.splitext(fullpath)[1].lower()
        basename = os.path.basename(fullpath)
        try:
            with open(fullpath, 'rb') as f:
                files = {
                    'image': (basename, f),
                }
                r = requests.post(settings.RETICULUM_UPLOAD + "/", files=files,
                                  verify=False)
                reply.rhash = r.json()["hash"]
                reply.extension = extension
                reply.save()
                print("uploaded " + str(reply.image))
        except IOError:
            pass


def upload_convo_images_to_reticulum(apps, schema_editor):
    Conversation = apps.get_model("main", "Conversation")
    for conversation in Conversation.objects.all():
        if conversation.rhash or not conversation.image:
            continue
        fullpath = os.path.join(settings.MEDIA_ROOT, str(conversation.image))
        extension = os.path.splitext(fullpath)[1].lower()
        basename = os.path.basename(fullpath)
        try:
            with open(fullpath, 'rb') as f:
                files = {
                    'image': (basename, f),
                }
                r = requests.post(settings.RETICULUM_UPLOAD + "/", files=files,
                                  verify=False)
                conversation.rhash = r.json()["hash"]
                conversation.extension = extension
                conversation.save()
                print("uploaded " + str(conversation.image))
        except IOError:
            pass

def assign_authors(apps, schema_editor):
    # We can't import the Person model directly as it may be a newer
    # version than this migration expects. We use the historical version.
    User = apps.get_model("auth", "User")
    Conversation = apps.get_model("main", "Conversation")

    default_user = User.objects.filter(is_superuser=True).first()
    try:
        # in production, just make onika the default
        default_user = User.objects.get(username='onika')
    except User.DoesNotExist:
        pass

    for c in Conversation.objects.filter(author=None):
        c.author = default_user
        c.save()
        print("assigned %d author %s" % (c.id, default_user.username))


def twitter_images_to_https(apps, schema_editor):
    NowPost = apps.get_model("main", "NowPost")
    for np in NowPost.objects.filter(service="twitter"):
        if np.image_url.startswith("http://pbs.twimg.com/"):
            np.image_url = np.image_url.replace('http://', 'https://')
            np.save()

        
class Migration(migrations.Migration):

    replaces = [('main', '0001_initial'), ('main', '0002_auto_20150311_1746'), ('main', '0003_auto_20150311_1830'), ('main', '0004_reply_vimeo_id'), ('main', '0005_auto_20150322_2030'), ('main', '0006_nowpost_video_url'), ('main', '0007_auto_20160225_1130'), ('main', '0008_auto_20160225_1133'), ('main', '0009_auto_20160225_1204'), ('main', '0010_auto_20160225_1210'), ('main', '0011_remove_conversation_title'), ('main', '0012_remove_reply_title'), ('main', '0013_auto_20160311_1424'), ('main', '0014_comment'), ('main', '0015_auto_20160611_1216'), ('main', '0016_auto_20160611_1219'), ('main', '0015_auto_20160513_1637'), ('main', '0017_merge'), ('main', '0018_auto_20160627_2028'), ('main', '0019_auto_20160627_2124'), ('main', '0020_auto_20160627_2125'), ('main', '0021_auto_20160627_2223'), ('main', '0022_auto_20170930_1232')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('body', models.TextField(blank=True, default='')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('image', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-added'],
            },
        ),
        migrations.CreateModel(
            name='NowPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField()),
                ('service', models.TextField(blank=True, default=b'')),
                ('service_id', models.TextField(blank=True, default=b'')),
                ('text', models.TextField(blank=True, default=b'')),
                ('original', models.TextField(blank=True, default=b'')),
                ('image_url', models.TextField(blank=True, default=b'')),
                ('image_width', models.IntegerField(default=0)),
                ('image_height', models.IntegerField(default=0)),
                ('screen_name', models.TextField(blank=True, default=b'')),
                ('video_url', models.TextField(blank=True, default=b'')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.TextField(blank=True, default='')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('image', models.TextField(null=True)),
                ('url', models.TextField(blank=True, default='')),
                ('title', models.TextField(blank=True, default='')),
                ('youtube_id', models.TextField(blank=True, default=b'')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Item')),
                ('vimeo_id', models.TextField(blank=True, default=b'')),
            ],
            options={
                'ordering': ['added'],
            },
        ),
        migrations.AlterOrderWithRespectTo(
            name='reply',
            order_with_respect_to='item',
        ),
        migrations.RenameModel(
            old_name='Item',
            new_name='Conversation',
        ),
        migrations.AlterModelOptions(
            name='reply',
            options={},
        ),
        migrations.AddField(
            model_name='conversation',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RunPython(
            code=assign_authors,
        ),
        migrations.AlterField(
            model_name='conversation',
            name='image',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='conversation',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.RemoveField(
            model_name='conversation',
            name='title',
        ),
        migrations.RemoveField(
            model_name='reply',
            name='title',
        ),
        migrations.AlterField(
            model_name='reply',
            name='image',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('body', models.TextField(blank=True, default='')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('reply', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Reply')),
            ],
            options={
                'ordering': ['added'],
            },
        ),
        migrations.RunPython(
            code=twitter_images_to_https,
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ['added']},
        ),
        migrations.AddField(
            model_name='conversation',
            name='rhash',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reply',
            name='rhash',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='conversation',
            name='extension',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='reply',
            name='extension',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.RunPython(
            code=upload_convo_images_to_reticulum,
        ),
        migrations.RunPython(
            code=upload_reply_images_to_reticulum,
        ),
        migrations.RemoveField(
            model_name='conversation',
            name='image',
        ),
        migrations.RemoveField(
            model_name='reply',
            name='image',
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='image_url',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='original',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='screen_name',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='service',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='service_id',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='text',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='nowpost',
            name='video_url',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='reply',
            name='vimeo_id',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='reply',
            name='youtube_id',
            field=models.TextField(blank=True, default=''),
        ),
    ]
